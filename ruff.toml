# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    "yolo",
]

# Same as Black.
line-length = 100
indent-width = 4

# Assume Python 3.9
target-version = "py312"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = [
    "A",
    "B",
    "D",
    "E",
    "G",
    "W",
    "F",
    "I",
    "N",
    "Q",
    "UP",
    "C90",
    "YTT",
    "ANN",
    "S",
    "BLE",
    "FBT",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "ISC",
    "INP",
    "PIE",
    "T20",
    "PYI",
    "PT",
    "RSE",
    "RET",
    "SLF",
    "SIM",
    "TID",
    "TCH",
    "ARG",
    "PTH",
    "ERA",
    "PGH",
    "PL",
    "TRY",
    "NPY",
    "RUF",
]

ignore = ["ANN101","ANN102","COM","EXE","PD","S307","FBT001","FBT002","ISC001","G004"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[lint.per-file-ignores]
"tests/*" = ["S101","T201","PLR2004",]
"test_scripts/*" = ["S101","T201","PLR2004","INP001"]
"src/beamclean/*.py" = ["F722"]  # Ignore undefined names in jaxtyping annotations

[lint.pylint]
max-args = 7

[lint.mccabe]
max-complexity = 10

[lint.isort]
force-wrap-aliases = true
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

# TODO: your package name here
known-first-party = ["semantic_cv"]

[lint.pydocstyle]
convention = "google"